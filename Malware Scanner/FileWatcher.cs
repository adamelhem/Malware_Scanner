public class FileWatcher
{
    private IFileHandleStrategy _fileHandleStrategy;

    public void StartWatch(string path, IFileHandleStrategy fileHandleStrategy)
    {
        _fileHandleStrategy = fileHandleStrategy;
        using (var watcher = new FileSystemWatcher(path))
        {
            watcher.NotifyFilter = NotifyFilters.Attributes
                                 | NotifyFilters.CreationTime
                                 | NotifyFilters.DirectoryName
                                 | NotifyFilters.FileName
                                 | NotifyFilters.LastAccess
                                 | NotifyFilters.LastWrite
                                 | NotifyFilters.Security
                                 | NotifyFilters.Size;

            watcher.Changed += OnChanged;
            watcher.Created += OnCreated;
            watcher.Deleted += OnDeleted;
            watcher.Renamed += OnRenamed;
            watcher.Error += OnError;

            //watcher.Filter = "*";
            watcher.IncludeSubdirectories = true;
            watcher.EnableRaisingEvents = true;

            Console.WriteLine("Press enter to exit.");
            Console.ReadLine();
        };
    }

    private void OnChanged(object sender, FileSystemEventArgs e)
    {
        if (e.ChangeType != WatcherChangeTypes.Changed)
        {
            return;
        }
        Console.WriteLine($"Changed: {e.FullPath}");
        _fileHandleStrategy.OnChanged(e.FullPath);
    }

    private  void OnCreated(object sender, FileSystemEventArgs e)
    {
        var value = $"Created: {e.FullPath}";
        Console.WriteLine(value);
        _fileHandleStrategy.OnCreated(e.FullPath);
    }

    private  void OnDeleted(object sender, FileSystemEventArgs e)
    {
        Console.WriteLine($"Deleted: {e.FullPath}");
        _fileHandleStrategy.OnDeleted(e.FullPath);
    }

    private  void OnRenamed(object sender, RenamedEventArgs e)
    {
        Console.WriteLine($"Renamed:");
        Console.WriteLine($"    Old: {e.OldFullPath}");
        Console.WriteLine($"    New: {e.FullPath}");
        _fileHandleStrategy.OnRenamed(e.FullPath);
    }

    private  void OnError(object sender, ErrorEventArgs e) =>
        PrintException(e.GetException());

    private  void PrintException(Exception? ex)
    {
        if (ex != null)
        {
            Console.WriteLine($"Message: {ex.Message}");
            Console.WriteLine("Stacktrace:");
            Console.WriteLine(ex.StackTrace);
            Console.WriteLine();
            PrintException(ex.InnerException);
        }
    }

}